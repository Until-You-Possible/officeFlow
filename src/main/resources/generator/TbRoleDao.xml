<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TbRoleDao">
  <resultMap id="BaseResultMap" type="generator.TbRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="systemic" jdbcType="BIT" property="systemic" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="generator.TbRoleWithBLOBs">
    <result column="permissions" jdbcType="LONGVARCHAR" property="permissions" />
    <result column="default_permissions" jdbcType="LONGVARCHAR" property="defaultPermissions" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_name, `desc`, systemic
  </sql>
  <sql id="Blob_Column_List">
    permissions, default_permissions
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="generator.TbRoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="generator.TbRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="generator.TbRoleExample">
    delete from tb_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="generator.TbRoleWithBLOBs" useGeneratedKeys="true">
    insert into tb_role (role_name, `desc`, systemic,
      permissions, default_permissions
      )
    values (#{roleName,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{systemic,jdbcType=BIT},
      #{permissions,jdbcType=LONGVARCHAR}, #{defaultPermissions,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="generator.TbRoleWithBLOBs" useGeneratedKeys="true">
    insert into tb_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="systemic != null">
        systemic,
      </if>
      <if test="permissions != null">
        permissions,
      </if>
      <if test="defaultPermissions != null">
        default_permissions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="systemic != null">
        #{systemic,jdbcType=BIT},
      </if>
      <if test="permissions != null">
        #{permissions,jdbcType=LONGVARCHAR},
      </if>
      <if test="defaultPermissions != null">
        #{defaultPermissions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.TbRoleExample" resultType="java.lang.Long">
    select count(*) from tb_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.systemic != null">
        systemic = #{record.systemic,jdbcType=BIT},
      </if>
      <if test="record.permissions != null">
        permissions = #{record.permissions,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.defaultPermissions != null">
        default_permissions = #{record.defaultPermissions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_role
    set id = #{record.id,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      systemic = #{record.systemic,jdbcType=BIT},
      permissions = #{record.permissions,jdbcType=LONGVARCHAR},
      default_permissions = #{record.defaultPermissions,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_role
    set id = #{record.id,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      systemic = #{record.systemic,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="generator.TbRoleWithBLOBs">
    update tb_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="systemic != null">
        systemic = #{systemic,jdbcType=BIT},
      </if>
      <if test="permissions != null">
        permissions = #{permissions,jdbcType=LONGVARCHAR},
      </if>
      <if test="defaultPermissions != null">
        default_permissions = #{defaultPermissions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="generator.TbRoleWithBLOBs">
    update tb_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      systemic = #{systemic,jdbcType=BIT},
      permissions = #{permissions,jdbcType=LONGVARCHAR},
      default_permissions = #{defaultPermissions,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="generator.TbRole">
    update tb_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      systemic = #{systemic,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>